---
- name: Ensure Python and required packages are installed
  ansible.builtin.pip:
    name:
      - pandas
      - plotly
      - kaleido
    state: present

- name: Ensure the CSV file exists
  ansible.builtin.stat:
    path: "{{ csv_file_path }}"
  register: csv_file_stat

- name: Fail if CSV file is not found
  ansible.builtin.fail:
    msg: "The specified CSV file {{ csv_file_path }} does not exist."
  when: not csv_file_stat.stat.exists

- name: Execute the Python script directly
  ansible.builtin.shell: |
    python3 - << 'EOF'
    import os
    import pandas as pd
    import plotly.express as px

    # Read the CSV file
    csv_file_path = "{{ csv_file_path }}"
    output_dir = os.path.dirname(csv_file_path)  # Get the directory of the CSV file
    df = pd.read_csv(csv_file_path, parse_dates=['timestamp'])

    # Clean column names by stripping any leading/trailing spaces
    df.columns = df.columns.str.strip()

    # Define a dictionary to map each column to its respective filename
    plots = {
        'utilization.gpu [%]': 'gpu_utilization_plot.png',
        'utilization.memory [%]': 'memory_utilization_plot.png',
        'power.draw [W]': 'power_draw_plot.png'
    }

    # Create and save plots
    for column, filename in plots.items():
        if column in df.columns:  # Ensure the column exists
            fig = px.line(
                df,
                x='timestamp',
                y=column,
                title=f"{column} Over Time",
                labels={'timestamp': 'Time', column: column},
                markers=True
            )
            output_path = os.path.join(output_dir, filename)  # Save in the same directory as CSV
            fig.write_image(output_path)
    EOF
  args:
    executable: /bin/bash
